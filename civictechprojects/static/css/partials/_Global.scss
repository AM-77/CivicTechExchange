body {
  background-color: $color-background-default;
}

// uses democracyLab orange for a "themed button", use class="btn btn-theme"
.btn-theme {
  background-color: $color-orange;
  color: $color-text-light;
}
.btn-theme a, .btn-theme a[type="button"] {
  color: $color-text-light;
  text-decoration: none;
}
.btn-theme:hover {
  background-color: $color-orange-darker;
  color: $color-text-light;
}
a.btn-theme:hover, a[type="button"].btn-theme:hover {
  text-decoration: none;
}

//use to clear specific button appearance settings, e.g. fix webkit-appearance problem on react-bootstrap <Button href=""> components
button.clear-button-appearance, a.clear-button-appearance, a[type="button"].clear-button-appearance {
  -webkit-appearance: none;
  -moz-appearance: none;
}

//for on-page actions we want to appear as links
.pseudo-link {
  color: $color-orange;
  text-decoration: underline;
}
//setting the :hover state for psuedo-links requires targeting parent elements, and it doesn't like class declarations
//this requires any psuedo-link to be a span in a paragraph with class psuedo-parent and the only span in that paragraph. TODO: Make this more versatile. Or just use <a href="#"> ?
p.psuedo-parent:hover span {
  color: $color-orange-darker;
  cursor: pointer;
}

//these are "helper classes" with one declaration each
.background-light {
  background-color: $color-background-light;
}
